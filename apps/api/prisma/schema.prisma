generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(cuid())
  email     String         @unique
  name      String?
  password  String
  role      UserRole       @default(CUSTOMER)
  tokens    RefreshToken[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  revoked   Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum UserRole {
  CUSTOMER
  ADMIN
}

model Category {
  id          String     @id @default(cuid())
  name        String
  slug        String     @unique
  description String?
  parentId    String?
  parent      Category?  @relation("CategoryToParent", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryToParent")
  products    Product[]

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Product {
  id          String         @id @default(cuid())
  title       String
  slug        String         @unique
  description String?
  brand       String?
  status      ProductStatus  @default(DRAFT)

  categoryId  String?
  category    Category?      @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  images      ProductImage[]
  variants    Variant[]

  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

enum ProductStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model ProductImage {
  id        String  @id @default(cuid())
  url       String
  alt       String?
  isPrimary Boolean @default(false)
  position  Int     @default(0)

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Variant {
  id              String   @id @default(cuid())
  productId       String
  product         Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  sku             String   @unique
  title           String?
  price           Decimal
  compareAtPrice  Decimal?
  stock           Int      @default(0)
  attributes      Json?

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

